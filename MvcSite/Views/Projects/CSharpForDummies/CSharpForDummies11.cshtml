@{
    ViewBag.Title = "C# For Dummies";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section ExtraHeadContent {
    <meta name="description" content="C# for Dummies представлява условията на задачите от книгата за C# на Академия Телерик и техните упътванията, като аз съм ги решавал или поне съм се опитал :)">
}

<h1>C# For Dummies</h1>
<h2> Глава 11. Създаване и използване на обекти</h2>
<span class="tab"></span>1. Напишете програма, която прочита от конзолата година и проверява дали е високосна.<br /><br />
<span class="tab"></span>Упътване: Използвайте структурата <code>DateTime</code>.<br /><br />
<span class="tab"></span>Решение: <br />
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;year:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;year&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">if</span>&nbsp;((((year&nbsp;%&nbsp;4)&nbsp;==&nbsp;0)&nbsp;&amp;&amp;&nbsp;((year&nbsp;%&nbsp;100)&nbsp;!=&nbsp;0)&nbsp;||&nbsp;((year&nbsp;%&nbsp;400)&nbsp;==&nbsp;0)))<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="String">"{0}&nbsp;is&nbsp;leap&nbsp;year."</span>,&nbsp;year);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">else</span><br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="String">"{0}&nbsp;isn't&nbsp;a&nbsp;leap&nbsp;year."</span>,&nbsp;year);<br />
    }
</div>
<hr>
<span class="tab"></span>2. Напишете програма, която генерира и принтира на конзолата 10 случайни числа в интервала [100, 200].<br /><br />
<span class="tab"></span>Упътване: Използвайте класа <code>Random</code>. Можете да генерирате произволни числа в интервала [0, 100] и към всички да прибавите 100.<br />
<span class="tab"></span>Решение:<br />
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Random&nbsp;r&nbsp;=&nbsp;<span class="Keyword">new</span>&nbsp;Random();<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">for</span>&nbsp;(<span class="ValueType">int</span>&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;10;&nbsp;i++)<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(r.Next(100,&nbsp;201));<br />
    }
</div>
<hr>
<span class="tab"></span>3. Напишете програма, която извежда на конзолата кой ден от седмицата е днес.<br /><br />
<span class="tab"></span>Упътване: Използвайте структурата <code>DateTime</code>.<br /><br />
<span class="tab"></span>Решение:<br />
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;year:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;year&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;month:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;month&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;day:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;day&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;DateTime&nbsp;dateValue&nbsp;=&nbsp;<span class="Keyword">new</span>&nbsp;DateTime(year,&nbsp;month,&nbsp;day);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(dateValue.ToString(<span class="String">"ddd"</span>));<br />
    }
</div>
<hr>
<span class="tab"></span>4. Напишете програма, която извежда на стандартния изход броя на дните, часовете и минутите, които са изтекли от включването на ком­пютъра до момента на изпълнението на програмата. За реализацията изпол­звайте класа <code>Environment</code>.<br /><br />
<span class="tab"></span>Упътване: Използвайте свойството <code>Environment.TickCount</code>, за да получите броя на изтеклите милисекунди. Използвайте факта, че в една секунда има 1000 милисекунди и пресметнете минутите, часовете и дните.<br /><br />
<span class="tab"></span>Решение:<br />
<span class="tab"></span><img src="/Resources/CSResources/ch11-4.jpg">
<hr>
<span class="tab"></span>5. Напишете програма, която по дадени два катета намира хипотенузата на правоъгълен триъгълник. Реализирайте въвеждане на дължините на катетите от стандартния вход, а за пресмятането на хипотенузата използвайте методи на класа <code>Math</code>.<br /><br />
<span class="tab"></span>Упътване: Хипотенузата на правоъгълен триъгълник се намира с помощта на известната теорема на Питагор: <code>a<sup>2</sup> + b<sup>2</sup> = c<sup>2</sup></code>, където <code>a</code> и <code>b</code> са двата катета, а <code>c</code> е хипотенузата. Коренувайте двете страни, за да получите формула за дължината на хипотенузата. За реализацията на корену­ването използвайте метода <code>Sqrt(…)</code> на класа <code>Math</code>.<br /><br />
<span class="tab"></span>Решение: <br />
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"First&nbsp;side:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;a&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Second&nbsp;side:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;b&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Hypotenuse&nbsp;is:&nbsp;"</span>&nbsp;+&nbsp;Math.Sqrt(Math.Pow(a,2)&nbsp;+&nbsp;Math.Pow(b,2)));<br />
    }
</div>
<hr>
<span class="tab"></span>6. Напишете програма, която пресмята лице на триъгълник по:<br />
<span class="tab2"></span>a. дължините на трите му страни; <br />
<span class="tab2"></span>b. дължината на една от страните и височината към нея; <br />
<span class="tab2"></span>c. дължините на две от страните му и ъгъла между тях в градуси.<br /><br />
<span class="tab"></span>Упътване:  За първата подточка на задачата използвайте Хероновата формула:<br />
<span class="tab"></span><img src="/Resources/CSResources/ch11-6-1.gif">, където <img src="/Resources/CSResources/ch11-6-2.gif">.<br /><br />
<span class="tab"></span>За втората подточка използвайте формулата: <img src="/Resources/CSResources/ch11-6-3.gif">.<br /><br />
<span class="tab"></span>За третата използвайте формулата: <img src="/Resources/CSResources/ch11-6-4.gif"><br /><br />
<span class="tab"></span>Решение: <br />
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%2011%20Solution%206/Program.cs" target="_blank\"><b><u>Link</u></b></a><hr>
<span class="tab"></span>7. Дефинирайте свое собствено пространство <code>Chapter11</code> и поставете в него двата класа <code>Cat</code> и <code>Sequence</code>, които използвахме в примерите на текущата тема. Направете още едно собствено пространство с име <code>Chapter11.Examples</code> и в него направете клас, който извиква класовете <code>Cat</code> и <code>Sequence</code>.<br /><br />
<span class="tab"></span>Упътване: Създайте нов проект във Visual Studio, щракнете с десния бутон върху папката му и изберете от контекстното меню Add -> New Folder. След като въве­дете име на папката и натиснете [Enter], щракнете с десния бутон върху новосъздадената папка и изберете Add -> New Item… От списъка изберете Class, за име на новия клас въведете Cat и натиснете [Add]. Подменете дефиницията на новосъздадения клас с дефиницията, която дадохме в тази тема. Направете същото за класа <code>Sequence</code>.<br /><br />
<span class="tab"></span>Решение: <br />
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/tree/master/Chapter%2011%20Solution%207" target="_blank\"><b><u>Link</u></b></a><hr>
<span class="tab"></span>8. Напишете програма, която създава 10 обекта от тип <code>Cat</code>, дава им имена от вида <code>CatN</code>, където <code>N</code> e уникален пореден номер на обекта, и накрая извиква метода <code>SayMiau()</code> на всеки от тях. За реализацията използвайте вече дефинираното пространство Chapter11.<br /><br />
<span class="tab"></span>Упътване: Създайте масив с 10 елемента от тип <code>Cat</code>. Създайте в цикъл 10 обекта от тип <code>Cat</code> (използвайте конструктор с параметри), като ги присвоя­вате на съответните елементи от масива. За поредния номер на обек­тите използвайте метода <code>NextValue()</code> на класа <code>Sequence</code>. Накрая отново в цикъл изпълнете метода <code>SayMiau()</code> на всеки от елементите на масива. <br /><br />
<span class="tab"></span>Решение: <br />
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/tree/master/Chapter%2011%20Solution%207" target="_blank\"><b><u>Link</u></b></a><hr>
<span class="tab"></span>9. Напишете програма, която пресмята броя работни дни между днешната дата и дадена друга дата след днешната (включително). Работните дни са всички дни без събота и неделя, които не са официални празници, като по изключение събота може да е работен ден, когато се отра­ботват почивни дни около празниците. Програмата трябва да пази списък от предварително зададени официални празници, както и списък от предварително зададени работни съботи. <br /><br />
<span class="tab"></span>Упътване: Използвайте класа <code>System.DateTime</code> и методите в него. Можете да завъртите цикъл от днешната дата (<code>DateTime.Now.Date</code>) до крайната дата, увеличавайки последователно деня чрез метода <code>AddDays(1)</code>. <br /><br />
<span class="tab"></span>Решение: <br />
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%2011%20Solution%209/Program.cs" target="_blank\"><b><u>Link</u></b></a><br /><hr>
<span class="tab"></span>10. Дадена е последователност от цели положителни числа, записани едно след друго като символен низ, разделени с интервал. Да се напише програма, която пресмята сумата им. Пример: "43 68 9 23 318" = 461. <br /><br />
<span class="tab"></span>Упътване: Използвайте <code>String.Split(' ')</code>, за да разцепите символния низ по интервалите, след което с <code>Int32.Parse(…)</code> можете да извлечете отделните числа от получения масив от символни низове.  <br /><br />
<span class="tab"></span>Решение: <br />
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%2011%20Solution%2010/Program.cs" target="_blank\"><b><u>Link</u></b></a><br /><hr>
<span class="tab"></span>11. Напишете програма, която генерира случайно рекламно съобщение за някакъв продукт. Съобщенията трябва да се състоят от хвалебст­вена фраза, следвани от хвалебствена случка, следвани от автор (първо и второ име) и град, които се избират от предварително подготвени списъци. Например, нека имаме следните списъци:<br />
<span class="tab"></span>- Хвалебствени фрази: {"Продуктът е отличен.", "Това е страхотен продукт.", "Постоянно ползвам този продукт.", "Това е най-добрият продукт от тази категория."}.<br />
<span class="tab"></span>- Хвалебствени случки: {"Вече се чувствам добре.", "Успях да се променя.", "Той направи чудо.", "Не мога да повярвам, но вече се чувствам страхотно.", "Опитайте и вие. Аз съм много доволна."}.<br />
<span class="tab"></span>- Първо име на автор: {"Диана", "Петя", "Стела", "Елена", "Катя"}.<br />
<span class="tab"></span>- Второ име на автор: {"Иванова", "Петрова", "Кирова"}.<br />
<span class="tab"></span>- Градове: {"София", "Пловдив", "Варна", "Русе", "Бургас"}.<br />
<span class="tab"></span>Тогава програма би могла да изведе следното случайно-генерирано рекламно съобщение:<br />
<span class="tab"></span><table border="1"><tr><td>Постоянно ползвам този продукт. Опитайте и вие. Аз съм доволна. -– Елена Петрова, Варна</td></tr></table><br />
<span class="tab"></span>Упътване: Използвайте класа <code>System.Random</code> и неговия метод <code>Next(…)</code>.<br /><br />
<span class="tab"></span>Решение: <br />
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%2011%20Solution%2011/Program.cs" target="_blank\"><b><u>Link</u></b></a><hr>
<span class="tab"></span>12. Напишете програма, която изчислява стойността на даден числен израз, зададен като стринг. Численият израз се състои от:<br />
<span class="tab"></span>- реални числа, например 5, 18.33, 3.14159, 12.6;<br />
<span class="tab"></span>- аритметични оператори: <code>+, -, *, /</code> (със стандартните им приоритети);<br />
<span class="tab"></span>- математически функции: <code>ln(x), sqrt(x), pow(x,y);</code><br />
<span class="tab"></span>- скоби за промяна на приоритета на операциите: ( и ).<br />Обърнете внимание, че числовите изрази имат приоритет, например изразът <code>-1 + 2 + 3 * 4 - 0.5 = (-1) + 2 + (3 * 4) - 0.5 = 12.5.</code><br /><br />
<span class="tab"></span>Упътване: Задачата за пресмятане на числов израз е доста трудна и е малко вероятно да я решите коректно без да прочетете от някъде как се решава. За начало разгледайте статиите в Wikipedia за \"Shunting-yard algorithm\", която описва как се пре­образува израз от нормален в обратен полски запис (postfix notation), и статията за пресмятане на постфиксен израз .<br /><br />
<span class="tab"></span>Решение: <br />
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%2011%20Solution%2012/Program.cs" target="_blank\"><b><u>Link</u></b></a><hr>
<span class="tab"></span><a href="javascript:history.back()">&#8592; Обратно</a>