@{
    ViewBag.Title = "C# For Dummies";
    Layout = "~/Views/Shared/_LayoutEN.cshtml";
}

@section ExtraHeadContent {
    <meta name="description" content="C# for Dummies are the poblems from The C# Book of The Telerik Academy, their guidelines and the solutions, which I wrote or tried to :)">
    <meta name="author" content="Ivan Popov">
    <meta name="thumbnail" content="http://localhost:49690/Resources/ivanpopov.jpg" />
    <link rel="image_src" href="http://localhost:49690/Resources/ivanpopov.jpg" />
}

<h1>C# For Dummies</h1>

<h2>Chapter 9. Methods</h2>
<span class="tab"></span>1. Write a method that by given name prints on the console <code>"Hello, <name>!"</code> (for example:  <code>"Hello, Peter!" </code>).<br /><br />
<span class="tab"></span>Guidelines: Use a method that takes the name as parameter of type <code>string</code>.<br /><br />
<span class="tab"></span>Solution: <br />
<div class="code">
    <span class="ReferenceType">class</span>&nbsp;Program<br />
    {<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;ReturnName(<span class="ReferenceType">string</span>&nbsp;name)<br />
    &nbsp;&nbsp;&nbsp;&nbsp;{<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="String">"Hello&nbsp;{0}"</span>,&nbsp;name);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;}<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    &nbsp;&nbsp;&nbsp;&nbsp;{<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;name:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ReturnName(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;}<br />
    }
</div>
<hr>
<span class="tab"></span>2. Create a method <code>GetMax()</code> with two integer (<code>int</code>) parameters, that returns maximal of the two numbers. Write a program that reads three numbers from the console and prints the biggest of them. Use the <code>GetMax()</code> method you just created.<br /><br />
<span class="tab"></span>Guidelines: Use the expression <code>Max(a, b, c) = Max(Max(a, b), c)</code>.<br /><br />
<span class="tab"></span>Solution:  <br />
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%209%20Solution%202/Program.cs" target="_blank"><b><u>Link</u></b></a><hr>
<span class="tab"></span>3. Write a method that returns <b>the English name of the last digit</b> of a given number. Example: for 512 prints "two"; for 1024 prints "four"<br /><br />
<span class="tab"></span>Guidelines: Use the reminder of <b>division by 10</b> and then a <code>switch</code> statement.<br /><br />
<span class="tab"></span>Solution: <br />
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%209%20Solution%203/Program.cs" target="_blank"><b><u>Link</u></b></a><hr>
<span class="tab"></span>4. Write a method that finds <b>how many times certain number can be found in a given array</b>.<br /><br />
<span class="tab"></span>Guidelines: The method must take as parameter an array of integer numbers (<code>int[]</code>) and the number that has to be counted (<code>int</code>).<br /><br />
<span class="tab"></span>Solution: <br />
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%209%20Solution%204/Program.cs" target="_blank"><b><u>Link</u></b></a><hr>
<span class="tab"></span>5. Write a method that checks whether an element, from a certain position in an array is <b>greater than its two neighbours</b>.<br /><br />
<span class="tab"></span>Guidelines:  Just <b>perform a check</b>. The elements of the first and the last position in the array will be compared only with their left and right neighbor.<br /><br />
<span class="tab"></span>Solution: <br />
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%209%20Solution%205/Program.cs" target="_blank"><b><u>Link</u></b></a><hr>
<span class="tab"></span>6. Write a method that returns the position of <b>the first occurrence</b> of an element from an array, such that it is greater than its two neighbors simultaneously. Otherwise the result must be -1.<br /><br />
<span class="tab"></span>Guidelines:  Invoke the method from the <b>previous problem</b> in a <code>for</code>-loop.<br /><br />
<span class="tab"></span>Solution: <br />
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%209%20Solution%206/Program.cs" target="_blank"><b><u>Link</u></b></a><hr>
<span class="tab"></span>7. Write a method that prints the digits of a given decimal number in a reversed order. For example 256, must be printed as 652.<br /><br />
<span class="tab"></span>Guidelines: There are two solutions: <br />
<span class="tab"></span><b>First solution</b>: Let the number is num. So while <code>num ≠ 0</code> we print its last digit (<code>num % 10</code>) and then divide <code>num</code> by 10. <br />
<span class="tab"></span><b>Second solution</b>: Convert the number into a string <code>string</code> and print it in a reverse order with a <code>for</code>-loop. This is a bit cheater’s approach.<br /><br />
<span class="tab"></span>Solution: <br />
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%209%20Solution%207/Program.cs" target="_blank"><b><u>Link</u></b></a><hr>
<span class="tab"></span>8. Write a method that calculates the <b>sum of two very long positive integer numbers</b>. The numbers are represented as <b>array digits</b> and the last digit (the ones) is stored in the array at index 0. Make the method work for all numbers with length up to 10,000 digits.<br /><br />
<span class="tab"></span>Guidelines: The reader must implement own method that <b>calculates the sum of very big numbers</b>. The digits on position zero will keep the ones; the digit on the first position will keep the tenths and so on. When two very big numbers are about to be calculated, the ones of their sum will be equal to (<code>firstNumber[0] + secondNumber[0]) % 10</code>, the tenths on other side will be equal to (<code>firstNumber[1] + secondNumber[1]) % 10 + (firstNumber[0] + secondNumber[0])/10</code> and so on.<br /><br />
<span class="tab"></span>Solution: <br />
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%209%20Solution%208/Program.cs" target="_blank"><b><u>Link</u></b></a><hr>
<span class="tab"></span>9. Write a method that finds the biggest element of an array. Use that method to implement sorting in descending order.<br /><br />
<span class="tab"></span>Guidelines: First write a method that finds the <b>biggest element in array</b> and then modify it to find the biggest element in <b>given range of the array</b>, e.g. in the elements at indexes [3…10]. Finally find the <b>biggest number in the range [1…n-1] </b> and <b>swap it with the first element</b>, then find the biggest element in the range [2…n-1] and swap it with the second element of the array and so on. Think when the algorithm should finish.<br /><br />
<span class="tab"></span>Solution: <br />
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%209%20Solution%209/Program.cs" target="_blank"><b><u>Link</u></b></a><hr>
<span class="tab"></span>10. Write a program that calculates and prints the <code>n! </code> for any n in the range <code> [1…100] </code>.<br /><br />
<span class="tab"></span>Guidelines: The reader must implement own method that calculates the <b>product of very big numbers</b>, because the value of <code>100! </code> does not fit in variable of type <code>ulong</code> or <code>decimal</code>. The numbers can be represented in an array of reversed digits (one digit in each element). For example, the number <code>512</code> can be represented as <code>{2, 1, 5}</code>. Then the multiplication can be implemented in the way done in the elementary school (multiply digit by digit and then calculate the sum).
Another easier way to work with extremely large numbers such as <code>100! </code> is by using the library <code>System.Numerics.dll</code> (you have to add a reference to it in your project). Look for Information in internet about how to use the class <code>System.Numerics.BigInteger</code>.
Finally calculate in a loop <code>k! </code> for <code>k = 1, 2, …, n</code>.<br /><br />
<span class="tab"></span>Solution: <br />
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%209%20Solution%2010/Program.cs" target="_blank"><b><u>Link</u></b></a><hr>
<span class="tab"></span>11. Write a program that solves the following tasks: <br />
<span class="tab2"></span>- Put the digits from an integer number into a reversed order.<br />
<span class="tab2"></span>- Calculate the average of given sequence of numbers.<br />
<span class="tab2"></span>- Solve the linear equation <code>a * x + b = 0</code>.<br />
    <span class="tab"></span>Create appropriate <b>methods</b> for each of the above tasks.<br />
    <span class="tab"></span>Make the program show a <b>text menu</b> to the user. By choosing an option of that menu, the user will be able to choose which task to be invoked.<br />
    <span class="tab"></span>Perform validation of the input data:<br />
    <span class="tab2"></span>- The integer number must be a positive in the range [1…50,000,000].<br />
    <span class="tab2"></span>-  The sequence of numbers cannot be empty.<br />
    <span class="tab2"></span>- The coefficient a must be non-zero.<br /><br />
    <span class="tab"></span>Guidelines: Firstly, create the necessary <b>methods</b>. To <b>create the menu</b> display a list in which the actions are represented as numbers (1 – reverse, 2 – average, 3 – equation). Ask the user to choose from 1 to 3.<br /><br />
    <span class="tab"></span>Solution: <br />
    <span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%209%20Solution%2011/Program.cs" target="_blank"><b><u>Link</u></b></a><br /><hr>
    <span class="tab"></span><a href="javascript:history.back()">&#8592; Back</a>
