@{
    ViewBag.Title = "C# For Dummies";
    Layout = "~/Views/Shared/_LayoutEN.cshtml";
}

@section ExtraHeadContent {
    <meta name="description" content="C# for Dummies are the poblems from The C# Book of The Telerik Academy, their guidelines and the solutions, which I wrote or tried to :)">
    <meta name="author" content="Ivan Popov">
    <meta name="thumbnail" content="http://localhost:49690/Resources/ivanpopov.jpg" />
    <link rel="image_src" href="http://localhost:49690/Resources/ivanpopov.jpg" />
}

<h1>C# For Dummies</h1>
<h2>Chapter 4. Console Input and Output</h2><br />
<span class="tab"></span>1. Write a program that <b>reads</b> from the console <b>three numbers</b> of type int and prints their sum.<br /><br />
<span class="tab"></span>Guidelines: Use the methods <code>Console.ReadLine()</code> and <code>Int32.Parse()</code>.<br /><br />
<span class="tab"></span>Solution: <br />
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;radius:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;a&nbsp;=&nbsp;Int32.Parse(Consle.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Second&nbsp;number:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;b&nbsp;=&nbsp;Int32.Parse(Consle.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Third&nbsp;number:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;c&nbsp;=&nbsp;Int32.Parse(Consle.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="String">"Result&nbsp;is&nbsp;{0}"</span>,&nbsp;a&nbsp;+&nbsp;b&nbsp;+&nbsp;c);<br />
    }
</div>
<hr>
<span class="tab"></span>2. Write a program that <b>reads</b> from the console the <b>radius</b> "r" of a circle and prints its <b>perimeter and area</b>.<br /><br />
<span class="tab"></span>Guidelines: Use <code>Math.PI</code> constant and the well-known <b>geometric formulas</b>.<br /><br />
<span class="tab"></span>Solution: <br />
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;radius:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;r&nbsp;=&nbsp;Int32.Parse(Consle.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="String">"P&nbsp;is&nbsp;{0}&nbsp;and&nbsp;S&nbsp;is&nbsp;{1}"</span>,&nbsp;2&nbsp;*&nbsp;Math.PI&nbsp;*&nbsp;r,&nbsp;Math.PI&nbsp;*&nbsp;r&nbsp;*&nbsp;r);<br />
    }
</div>
<hr>
<span class="tab"></span>3. A given company has name, address, phone number, fax number, web site and manager. The manager has name, surname and phone number. Write a program that <b>reads information about the company</b> and its manager and then <b>prints it</b> on the console.<br /><br />
<span class="tab"></span>Guidelines: Format the text with <code>Write(…)</code> or <code>WriteLine(…)</code>.<br /><br />
<span class="tab"></span>Solution: <br />
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%204%20Solution%203/Program.cs" target="_blank"><b><u>Link</u></b></a><hr>
<span class="tab"></span>4. Write a program that <b>prints three numbers in three virtual columns</b> on the console. Each column should have a width of 10 characters and the numbers should be <b>left aligned</b>. The first number should be an integer in <b>hexadecimal</b>; the second should be <b>fractional positive</b>; and the third – a <b>negative fraction</b>. The last two numbers have to be rounded to the second decimal place.<br /><br />
<span class="tab"></span>Guidelines: Use format strings and the method <code>Console.WriteLine()</code>.<br /><br />
<span class="tab"></span>Solution: <br />
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;hexNum&nbsp;=&nbsp;2015;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="String">"|0x{0,-8:X|"</span>,&nbsp;hexNum);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">double</span>&nbsp;fractNum&nbsp;=&nbsp;-1.856;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="String">"|0,-10:f2}|"</span>,&nbsp;fractNum);<br />
    }
</div>
<hr>
<span class="tab"></span>5. Write a program that reads from the console two integer numbers (int) and prints how many numbers between them exist, such that the remainder of their division by 5 is 0. Example: in the range (14, 25) there are 3 such numbers: 15, 20 and 25.<br /><br />
<span class="tab"></span>Guidelines: There are two approaches for solving the problem:<br />
<span class="tab"></span><span class="tab"></span><b>First approach</b>: Use mathematical tricks for optimized calculation based on the fact that <b>every fifth number is divisible by 5</b>. Think how to implement this correctly and about the borderline cases.<br />
<span class="tab"></span><span class="tab"></span>The <b>second approach</b> is easier but it works slower. With a <code>for-</code><b>loop</b> each number within the given range can be checked. You should read on the Internet about how to use <code>for-</code>loops.<br /><br />
<span class="tab"></span>Solution: <br />
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;counter&nbsp;=&nbsp;0;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;first&nbsp;number:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;a&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;second&nbsp;number:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;b&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">for</span>&nbsp;(<span class="ValueType">int</span>&nbsp;i&nbsp;=&nbsp;a;&nbsp;i&nbsp;&lt;=&nbsp;b;&nbsp;i++)<br />
    &nbsp;&nbsp;&nbsp;&nbsp;{<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">if</span>&nbsp;(i&nbsp;%&nbsp;5&nbsp;==&nbsp;0)&nbsp;counter++;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;}<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="String">"{0}&nbsp;numbers&nbsp;found."</span>,&nbsp;counter);<br />
    }
</div>
<hr>
<span class="tab"></span>6. Write a program that reads two numbers from the console and <b>prints the greater of them</b>. Solve the problem without using conditional statements.<br /><br />
<span class="tab"></span>Guidelines: Since the problem requires a solution, which <b>does not use conditional statements</b>, you should use a different approach. Two possible solutions of the problem include the use of functions of class <code>Math</code>. The <b>greater</b> of the two numbers you can find with the function <code>Math.Max(a, b)</code> and the <b>smaller</b> with <code>Math.Min(a, b)</code>.<br /><br />
<span class="tab"></span>Solution: <br />
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {&nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;first&nbsp;number:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;a&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;second&nbsp;number:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;b&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="String">"{0}&nbsp;&gt;=&nbsp;{1}"</span>,&nbsp;Math.Max(a,&nbsp;b),&nbsp;Math.Min(a,&nbsp;b));<br />
    }
</div>
<hr>
<span class="tab"></span>7. Write a program that <b>reads five integer numbers and prints their sum</b>. If an invalid number is entered the program should prompt the user to enter another number.<br /><br />
<span class="tab"></span>Guidelines: You can read the numbers in <b>five different variables</b> and finally sum them and print the obtained sum. Note that the sum of 5 <code>int</code> values may not fit in the <code>int</code> type so you should use <code>long</code>.<br /><br />
<span class="tab"></span>Solution: <br />
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%204%20Solution%207/Program.cs" target="_blank"><b><u>Link</u></b></a><hr>
<span class="tab"></span>8. Write a program that reads five numbers from the console and prints the <b>greatest</b> of them.<br /><br />
<span class="tab"></span>Guidelines: You can use the <b>comparison statement</b> \"<code>if</code>\". You can read about it on the Internet.<br /><br />
<span class="tab"></span>Solution: <br />
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%204%20Solution%208/Program.cs" target="_blank"><b><u>Link</u></b></a><hr>
<span class="tab"></span>9. Write a program that <b>reads</b> a, b and c from the console and calculates: <b>ax2+bx+c=0</b>.<br /><br />
<span class="tab"></span>Guidelines: Use the method for calculating quadratic equations. <br /><br />
<span class="tab"></span>Solution: <br />
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%204%20Solution%209/Program.cs" target="_blank"><b><u>Link</u></b></a><hr>
<span class="tab"></span>10. Write a program that reads an integer number n from the console. After that reads n numbers from the console and prints their <b>sum</b>.<br /><br />
<span class="tab"></span>Guidelines: You should use a <code>for-</code><b>loop</b>. Read the numbers one after another and accumulate their sum in a variable, which then display on the console at the end.<br /><br />
<span class="tab"></span>Solution: <br />
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {&nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;sum&nbsp;=&nbsp;0;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;numbers&nbsp;count:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;length&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">for</span>&nbsp;(<span class="ValueType">int</span>&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;length;&nbsp;i++)<br />
    &nbsp;&nbsp;&nbsp;&nbsp;{<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;{0}&nbsp;number:&nbsp;"</span>,&nbsp;i&nbsp;+&nbsp;1);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sum&nbsp;+=&nbsp;Int32.Parse(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;}<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="String">"Sum&nbsp;of&nbsp;all&nbsp;numbers&nbsp;is&nbsp;{0}."</span>,&nbsp;sum);<br />
    }
</div>
<hr>
<span class="tab"></span>11. Write a program that reads an integer number n from the console and <b>prints all numbers in the range [1…n]</b>, each on a separate line.<br /><br />
<span class="tab"></span>Guidelines: Use a combination of <b>loops</b>  and the methods <code>Console.ReadLine()</code>, <code>Console.WriteLine()</code> and <code>Int32.Parse()</code>.<br /><br />
<span class="tab"></span>Solution: <br />
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {&nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;sum&nbsp;=&nbsp;0;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;number:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;length&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">for</span>&nbsp;(<span class="ValueType">int</span>&nbsp;i&nbsp;=&nbsp;1;&nbsp;i&nbsp;&lt;=&nbsp;length;&nbsp;i++)<br />
    &nbsp;&nbsp;&nbsp;&nbsp;{<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(i);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;<br />
    }
</div>
<hr>
<span class="tab"></span>12. Write a program that prints on the console the first 100 numbers in the <b>Fibonacci sequence</b>: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, …<br /><br />
<span class="tab"></span>Guidelines: For the solution of the problem use 2 temporary variables in which store the last 2 calculated values and with a loop calculate the rest (each subsequent number in the sequence is a sum of the last two). Use a <code>for-</code><b>loop</b> to implement the repeating logic.<br /><br />
<span class="tab"></span>Solution: <br />
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {&nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;num1&nbsp;=&nbsp;0;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;num2&nbsp;=&nbsp;1;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;sum&nbsp;=&nbsp;1;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;count&nbsp;=&nbsp;0;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(num1);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">while</span>(count&nbsp;&lt;&nbsp;100)<br />
    &nbsp;&nbsp;&nbsp;&nbsp;{<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sum&nbsp;=&nbsp;num1&nbsp;+&nbsp;num2;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;num1&nbsp;=&nbsp;num2;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;num2&nbsp;=&nbsp;sum;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(num2);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count++;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;}<br />
    }
</div>
<hr>
<span class="tab"></span>13. Write a program that calculates the <b>sum</b> (with <b>precision of 0.001</b>) of the following sequence: 1 + 1/2 - 1/3 + 1/4 - 1/5 + …<br /><br />
<span class="tab"></span>Guidelines: Accumulate the <b>sum of the sequence</b> in a variable inside a <code>while-</code><b>loop</b>. At each step compare the old sum with the new sum. If the difference between the two sums <code>Math.Abs(current_sum – old_sum)</code> is less than the required precision (0.001), the calculation should finish because the difference is constantly decreasing and the precision is constantly increasing at each step of the loop. The expected result is <b>1.307</b>.<br /><br />
<span class="tab"></span>Solution: <br />
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {&nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;last&nbsp;number:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;length&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">double</span>&nbsp;sum&nbsp;=&nbsp;1.0;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">for</span>&nbsp;(<span class="ValueType">int</span>&nbsp;i&nbsp;=&nbsp;2;&nbsp;i&nbsp;&lt;=&nbsp;length;&nbsp;i++)<br />
    &nbsp;&nbsp;&nbsp;&nbsp;{<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sum&nbsp;+=&nbsp;(1.0&nbsp;/&nbsp;i);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;}<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="String">"{0:F3}"</span>,&nbsp;sum);<br />
    }
</div>
<hr>
<span class="tab"></span><a href="javascript:history.back()">&#8592; Back</a>