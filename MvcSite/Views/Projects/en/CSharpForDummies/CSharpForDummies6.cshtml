@{
    ViewBag.Title = "C# For Dummies";
    Layout = "~/Views/Shared/_LayoutEN.cshtml";
}

@section ExtraHeadContent {
    <meta name="description" content="C# for Dummies are the poblems from The C# Book of The Telerik Academy, their guidelines and the solutions, which I wrote or tried to :)">
    <meta name="author" content="Ivan Popov">
    <meta name="thumbnail" content="http://localhost:49690/Resources/ivanpopov.jpg" />
    <link rel="image_src" href="http://localhost:49690/Resources/ivanpopov.jpg" />
}

<h1>C# For Dummies</h1>
<h2>Chapter 6. Loops</h2>
<span class="tab"></span>1. Write a program that prints on the console <b>the numbers from 1 to N</b>. The number <b>N</b> should be read from the standard input.<br /><br />
<span class="tab"></span>Guidelines: Use a <code>for</code>-loop.<br /><br />
<span class="tab"></span>Solution: <br />
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {&nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;first&nbsp;number:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;length&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">for</span>&nbsp;(<span class="ValueType">int</span>&nbsp;i&nbsp;=&nbsp;1;&nbsp;i&nbsp;&lt;&nbsp;length;&nbsp;i++)<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(i);<br />
    }
</div>
<hr>
<span class="tab"></span>2. Write a program that prints on the console the numbers from 1 to N, which are <b>not divisible by 3 and 7 simultaneously</b>. The number N should be read from the standard input.<br /><br />
<span class="tab"></span>Guidelines: Use a <code>for</code>-loop and the operator % for finding <b>the remainder</b> in integer division. A number number is not divisible by 3 and 7 simultaneously exactly when <code>(num % (3*7) == 0)</code>.<br /><br />
<span class="tab"></span>Solution: <br />
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%206%20Solution%202/Program.cs" target="_blank"><b><u>Link</u></b></a><hr>
<span class="tab"></span>3. Write a program that reads from the console a series of integers and prints the <b>smallest</b> and <b>largest</b> of them.<br /><br />
<span class="tab"></span>Guidelines: First <b>read the count</b> of numbers, for example in a variable <code>n</code>. Then <b>consequently enter n numbers</b> with one <code>for</code> loop. While entering each new number, save in two variables the <b>smallest</b> and the <b>largest</b> number until this moment. At the start initialize the smallest and the largest number with <code>Int32.MaxValue</code> and <code>Int32.MinValue</code> respectively.<br /><br />
<span class="tab"></span>Solution: <br />
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%206%20Solution%203/Program.cs" target="_blank"><b><u>Link</u></b></a><hr>
<span class="tab"></span>4. Write a program that prints <b>all possible cards from a standard deck</b> of cards, without jokers (there are 52 cards: 4 suits of 13 cards).<br /><br />
<span class="tab"></span>Guidelines: <b>Number the cards</b> from 2 to 14 (these numbers will match the cards 2, 3, 4, 5, 6, 7, 8, 9, 10, J, Q, K, A). <b>Number the suits</b> from 1 to 4 (1 – club, 2 – diamond, 3 – heart and 4 – spades). Now you can use the <b>two nested loops</b> and print each of the cards with two <code>switch</code> statements.<br /><br />
<span class="tab"></span>Solution: <br />
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%206%20Solution%204/Program.cs" target="_blank"><b><u>Link</u></b></a><hr>
<span class="tab"></span>5. Write a program that reads from the console number N and print the sum of the first N members of the <b>Fibonacci sequence</b>: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, …<br /><br />
<span class="tab"></span>Guidelines: <b>Fibonacci numbers</b> start from 0 and 1, each additional is obtained as the <b>sum of the previous two</b>. You can find the first <code>n</code> Fibonacci numbers with a <code>for</code>-loop from 1 to <code>n</code>, and at each iteration calculate the next number by using the previous two (which you will keep in two additional variables).<br /><br />
<span class="tab"></span>Solution: <br />
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%206%20Solution%205/Program.cs" target="_blank"><b><u>Link</u></b></a><hr>
<span class="tab"></span>6. Write a program that calculates <b>N!/K!</b> for given N and K (1 < K < N). <br /><br />
<span class="tab"></span>Guidelines: Multiply the numbers from K+1 to N (think why this is correct).<br /><br />
<span class="tab"></span>Solution: <br />
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {&nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;N:&nbsp;(1&lt;K&lt;N)&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;n&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;K:&nbsp;(1&lt;K&lt;N)&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;k&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">for</span>&nbsp;(<span class="ValueType">int</span>&nbsp;i&nbsp;=&nbsp;n&nbsp;-&nbsp;1;&nbsp;i&nbsp;&gt;&nbsp;0;&nbsp;i--)<br />
    &nbsp;&nbsp;&nbsp;&nbsp;{<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n&nbsp;*=&nbsp;i;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;}<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">for</span>&nbsp;(<span class="ValueType">int</span>&nbsp;i&nbsp;=&nbsp;k&nbsp;-&nbsp;1;&nbsp;i&nbsp;&gt;&nbsp;0;&nbsp;i--)<br />
    &nbsp;&nbsp;&nbsp;&nbsp;{<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k&nbsp;*=&nbsp;i;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;}<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;n&nbsp;/=&nbsp;k;&nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="String">"Result&nbsp;is&nbsp;{0}"</span>,&nbsp;n);<br />
    }
</div>
<hr>
<span class="tab"></span>7. Write a program that calculates <b>N!*K!/(N-K)!</b> for given N and K (1 < K < N).<br/><br/>
<span class="tab"></span>Guidelines: <b>One solution</b> is to calculate separately each factorial and at the end to perform the respective operations with the results.<br />Think how you can <b>optimize the calculations</b>, in order to not calculate too many factorials! In <b>fractions</b> of factorials there are many possibilities to <b>reduce the same factors</b> in the numerator and denominator. These optimizations will not only reduce the calculations and increase the performance but will <b>save you from overflows</b> in some situations. You might need to use arrays <code>num[0..N]</code> and <code>denum[0..n]</code> to hold the factors in the numerator and in the denominator and to <b>cancel the fraction</b>.<br/><br/>
<span class="tab"></span>Solution: <br/>
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%206%20Solution%207/Program.cs" target="_blank"><b><u>Link</u></b></a><hr>
<span class="tab"></span>8. In combinatorics, the Catalan numbers are calculated by the following formula: <br/>
<span class="tab"></span><span class="tab"></span><img src="/Resources/CSResources/ch6-8.png">, for n ≥ 0.<br/>
<span class="tab"></span>Write a program that calculates the n-th Catalan number by given n.<br/><br/>
<span class="tab"></span>Guidelines: Use the same concept of <b>canceling the faction of simple factors</b>, like you probably did in the <b>previous problem</b>.<br/><br/>
<span class="tab"></span>Solution: <br/>
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%206%20Solution%208/Program.cs" target="_blank"><b><u>Link</u></b></a><hr>
<span class="tab"></span>9. Write a program that for a given integers <b>n</b> and <b>x</b>, <b>calculates the sum</b>: <img src="/Resources/CSResources/ch6-9.png"><br/><br/>
<span class="tab"></span>Guidelines: You can solve the problem with a <code>for</code>-loop for <code>k=0…n</code>, by using three additional variables <code>factorial, power</code> and <code>sum</code> in which you will keep for the <b>k-th</b> iteration of the loop respectively <b>k!, x-k</b> and the <b>sum of the first k members</b> of sequence. If your implementation is good, you should have only one loop and you should not use external functions to calculate factorials and to raise power.<br/><br/>
<span class="tab"></span>Solution: <br/>
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {&nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;sum&nbsp;=&nbsp;1,&nbsp;temp&nbsp;=&nbsp;1;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;n:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;n&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;x:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;x&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">for</span>&nbsp;(<span class="ValueType">int</span>&nbsp;i&nbsp;=&nbsp;1;&nbsp;i&nbsp;&lt;=&nbsp;n;&nbsp;i++)<br />
    &nbsp;&nbsp;&nbsp;&nbsp;{<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp&nbsp;*=&nbsp;i&nbsp;/&nbsp;x;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sum&nbsp;+=&nbsp;temp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="String">"Result&nbsp;is&nbsp;{0}"</span>,&nbsp;sum);<br />
    }
</div>
<hr>
<span class="tab"></span>10. Write a program that reads from the console a <b>positive integer number N</b> (N < 20) and prints a <b>matrix</b> of numbers as on the figures below:<br/>
<span class="tab"></span><img src="/Resources/CSResources/ch6-10 example.jpg"><br/><br/>
<span class="tab"></span>Guidelines: You should use <b>two nested loops</b>, similar to the problem \"Printing a Triangle\". The outer loop must run from 1 to N, and the inner – from the value of the outer loop to the value of the outer loop + N - 1.<br/><br/>
<span class="tab"></span>Solution: <br/>
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;N:&nbsp;(N&nbsp;&lt;&nbsp;20)&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;n&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">for</span>&nbsp;(<span class="ValueType">int</span>&nbsp;i&nbsp;=&nbsp;1;&nbsp;i&nbsp;&lt;=&nbsp;n;&nbsp;i++)<br />
    &nbsp;&nbsp;&nbsp;&nbsp;{<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">for</span>&nbsp;(<span class="ValueType">int</span>&nbsp;j&nbsp;=&nbsp;i;&nbsp;j&nbsp;&lt;=&nbsp;i;&nbsp;j++)<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"{0}&nbsp;"</span>,&nbsp;j);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine();<br />
    &nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />
    }
</div>
<hr>
<span class="tab"></span>11. Write a program that calculates with <b>how many zeroes the factorial of a given number ends</b>. Examples:<br/>
<span class="tab"></span>N = 10 -> N! = 36288<b>00</b> -> 2<br/>
<span class="tab"></span>N = 20 -> N! = 243290200817664<b>0000</b> -> 4<br/><br/>
<span class="tab"></span>Guidelines: The <b>number of zeros at the end of n!</b> depends on how many times the number 10 is a divisor of the factorial. Because the product 1*2*3…*n has a greater number of divisors 2, than 5 and because 10 = 2 * 5, then the <b>number of zeros in n!</b> is exactly as many as the <b>multipliers with value 5 in the product 1 * 2 * 3 * … * n</b>. Because every fifth number is divisible by 5, and every 25th number is divisible by 5 two times, etc., the number of zeros in n! is <b>the sum: n/5 + n/25 + n/125 + …</b><br/><br/>
<span class="tab"></span>Solution: <br/>
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;N:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">decimal</span>&nbsp;n&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;zeroes&nbsp;=&nbsp;0;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">for</span>&nbsp;(<span class="ValueType">int</span>&nbsp;i&nbsp;=&nbsp;(<span class="ValueType">int</span>)(n&nbsp;-&nbsp;1);&nbsp;i&nbsp;&gt;&nbsp;0;&nbsp;i--)<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n&nbsp;*=&nbsp;i;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"N!&nbsp;is&nbsp;{0}&nbsp;and&nbsp;it&nbsp;ends&nbsp;"</span>,&nbsp;n);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">do</span><br />
    &nbsp;&nbsp;&nbsp;&nbsp;{<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n&nbsp;/=&nbsp;10;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zeroes++;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="Statement">while</span>&nbsp;(n&nbsp;%&nbsp;10&nbsp;==&nbsp;0);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="String">"with&nbsp;{0}&nbsp;zeroes."</span>,&nbsp;zeroes);<br />
    }
</div>
<hr>
<span class="tab"></span>12. Write a program that converts a given number <b>from decimal to binary notation</b> (numeral system).<br/><br/>
<span class="tab"></span>Guidelines: Read in Wikipedia what <b>numeral systems</b> are.<br/><br/>
<span class="tab"></span>Solution: <br/>
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;number:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;n&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());&nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ReferenceType">string</span>&nbsp;binary&nbsp;=&nbsp;Convert.ToString(n,&nbsp;2);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="String">"Result&nbsp;is&nbsp;{0}"</span>,&nbsp;binary);<br />
    }
</div>
<hr>
<span class="tab"></span>13. Write a program that converts a given number <b>from binary to decimal notation</b>.<br/><br/>
<span class="tab"></span>Guidelines: See the previous problem.<br/><br/>
<span class="tab"></span>Solution: <br/>
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;binary&nbsp;number:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;n&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ReferenceType">string</span>&nbsp;toDecimal&nbsp;=&nbsp;Convert.ToString(Convert.ToInt32(n,&nbsp;2),&nbsp;10);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="String">"Result&nbsp;is&nbsp;{0}"</span>,&nbsp;toDecimal);<br />
    }
</div>
<hr>
<span class="tab"></span>14. Write a program that converts a given number <b>from decimal to hexadecimal notation</b>.<br/><br/>
<span class="tab"></span>Guidelines: See the previous problem.<br/><br/>
<span class="tab"></span>Solution: <br/>
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;decimal&nbsp;number:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;n&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ReferenceType">string</span>&nbsp;toDecimal&nbsp;=&nbsp;Convert.ToString(Convert.ToInt32(n,&nbsp;10),&nbsp;16);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="String">"Result&nbsp;is&nbsp;{0}"</span>,&nbsp;toDecimal);<br />
    }
</div>
<hr>
<span class="tab"></span>15. Write a program that converts a given number <b>from hexadecimal to decimal notation</b>.<br/><br/>
<span class="tab"></span>Guidelines:  See the previous problem.<br/><br/>
<span class="tab"></span>Solution: <br/>
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;decimal&nbsp;number:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;n&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ReferenceType">string</span>&nbsp;toDecimal&nbsp;=&nbsp;Convert.ToString(Convert.ToInt32(n,&nbsp;16),&nbsp;10);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="String">"Result&nbsp;is&nbsp;{0}"</span>,&nbsp;toDecimal);<br />
    }
</div>
<hr>
<span class="tab"></span>16. Write a program that by a given integer <b>N</b> prints the numbers from 1 to N in <b>random order</b>.<br/><br/>
<span class="tab"></span>Guidelines: Search in the Internet for information about the class <code>System.Random</code>. Read in the Internet about <b>arrays</b>. Create an <b>array with N elements</b> and write in it the numbers from 1 to N. After that a few times (think exactly how many) <b>swap two random pairs</b> of elements from the array.<code>string</code>.<br/><br/>
<span class="tab"></span>Solution: <br/>
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%206%20Solution%2016/Program.cs" target="_blank"><b><u>Link</u></b></a><hr>
<span class="tab"></span>17. Write a program that given two numbers finds their <b>greatest common divisor (GCD)</b>.<br/><br/>
<span class="tab"></span>Guidelines: Search the Internet for the <b>Euclidean algorithm</b> for calculation the <b>greatest common divisor (CGD)</b> or read about it in Wikipedia.<br/><br/>
<span class="tab"></span>Solution: <br/>
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;first&nbsp;number:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;a&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;second&nbsp;number:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;b&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">while</span>&nbsp;(a&nbsp;!=&nbsp;0&nbsp;&amp;&amp;&nbsp;b&nbsp;!=&nbsp;0)<br />
    &nbsp;&nbsp;&nbsp;&nbsp;{<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">if</span>&nbsp;(a&nbsp;&gt;&nbsp;b)&nbsp;a&nbsp;%=&nbsp;b;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">else</span>&nbsp;b&nbsp;%=&nbsp;a;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;}<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">if</span>&nbsp;(a&nbsp;==&nbsp;0)&nbsp;Console.WriteLine(b);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">else</span>&nbsp;Console.WriteLine(a);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />
    }
</div>
<hr>
<span class="tab"></span>18. Write a program that for a given number n, outputs a matrix in the form of a <b>spiral</b>: Example with n=4:<br/>
<table id="table1">
    <tbody id="tbody1">
        <tr>            
            <td id="td1">1</td>
            <td id="td1">2</td>
            <td id="td1">3</td>
            <td id="td1">4</td>
        </tr>
        <tr>
            <td id="td1">12</td>
            <td id="td1">13</td>
            <td id="td1">14</td>
            <td id="td1">5</td>
        </tr>
        <tr>
            <td id="td1">11</td>
            <td id="td1">16</td>
            <td id="td1">15</td>
            <td id="td1">6</td>
        </tr>
        <tr>
            <td id="td1">10</td>
            <td id="td1">9</td>
            <td id="td1">8</td>
            <td id="td1">7</td>
        </tr>
    </tbody>
</table>
<br/>
<span class="tab"></span>Guidelines: You should use a <b>two-dimensional array</b> (matrix). The algorithm of <b>filling a spiral matrix</b> in not straightforward and may require a bit of thinking.<br/><br/>
<span class="tab"></span>Solution: <br/>
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%206%20Solution%2018/Program.cs" target="_blank"><b><u>Link</u></b></a><br/><hr>
<span class="tab"></span><a href="javascript:history.back()">&#8592; Back</a>