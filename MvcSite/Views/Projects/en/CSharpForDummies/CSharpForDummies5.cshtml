@{
    ViewBag.Title = "C# For Dummies";
    Layout = "~/Views/Shared/_LayoutEN.cshtml";
}

@section ExtraHeadContent {
    <meta name="description" content="C# for Dummies are the poblems from The C# Book of The Telerik Academy, their guidelines and the solutions, which I wrote or tried to :)">
    <meta name="author" content="Ivan Popov">
    <meta name="thumbnail" content="http://localhost:49690/Resources/ivanpopov.jpg" />
    <link rel="image_src" href="http://localhost:49690/Resources/ivanpopov.jpg" />
}

<h1>C# For Dummies</h1>
<h2>Chapter 5. Conditional Statements</h2>
<span class="tab"></span>Write an <code>if</code>- statement that takes two integer variables and <b>exchanges</b> their values if the first one is greater than the second one.<br /><br />
<span class="tab"></span>Guidelines: Read about if-statements.<br /><br />
<span class="tab"></span>Solution <br />
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {&nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;first&nbsp;number:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;a&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;second&nbsp;number:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;b&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());&nbsp;&nbsp;&nbsp;&nbsp;<br />
    <br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">if</span>&nbsp;(a&nbsp;&gt;&nbsp;b)<br />
    &nbsp;&nbsp;&nbsp;&nbsp;{<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;=&nbsp;a&nbsp;+&nbsp;b;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b&nbsp;=&nbsp;a&nbsp;-&nbsp;b;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;=&nbsp;a&nbsp;-&nbsp;b;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;}<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="String">"First&nbsp;number&nbsp;-&nbsp;{0},&nbsp;Second&nbsp;number&nbsp;-&nbsp;{1}."</span>,&nbsp;a,&nbsp;b);<br />
    }
</div>
<hr>
<span class="tab"></span>2. Write a program that shows the sign (+ or -) of the product of three real numbers, without calculating it. Use a sequence of <code>if</code> operators.<br /><br />
<span class="tab"></span>Guidelines: A multiple of non-zero numbers has a positive product, if the <b>negative multiples are even number</b>. If the count of the negative numbers is odd, the product is negative. If at least one of the numbers is zero, the product is also zero. Use a counter <code>negativeNumbersCount</code> to keep the <b>number of negative numbers</b>. Check each number whether it is negative and change the counter accordingly. If some of the numbers is 0, print “0” as result (the zero has no sign). Otherwise print “+” or “-” depending on the condition <code> (negativeNumbersCount % 2 == 0) </code>.<br /><br />
<span class="tab"></span>Solution <br /><span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%205%20Solution%202/Program.cs" target="_blank"><b><u>Link</u></b></a><hr>
<span class="tab"></span>3. Write a program that finds the <b>biggest of three integers</b>, using nested <code>if</code> statements.<br /><br />
<span class="tab"></span>Guidelines: Use <b>nested</b> <code>if</code>-<b>statements</b>, first checking the first two numbers then checking the bigger of them with the third.<br /><br />
<span class="tab"></span>Solution <br />
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%205%20Solution%203/Program.cs" target="_blank"><b><u>Link</u></b></a><hr>
<span class="tab"></span>4. <b>Sort 3 real numbers</b> in descending order. Use nested <code>if</code> statements.<br /><br />
<span class="tab"></span>Guidelines: First <b>find the smallest</b> of the three numbers, and then <b>swap it with the first one</b>. Then check if the second is greater than the third number and if yes, swap them too.<br />Another approach is to check all possible orders of the numbers with a series of <code>if-else</code> checks: <code>a≤b≤c, a≤c≤b, b≤a≤c, b≤c≤a, c≤a≤b</code> and <code>c≤b≤a</code>.<br />A <b>more complicated</b> and more general solution of this problem is to put the numbers in an array and use the <code>Array.Sort(…)</code> method.<br /><br />
<span class="tab"></span>Solution <br />
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%205%20Solution%204/Program.cs" target="_blank"><b><u>Link</u></b></a><hr>
<span class="tab"></span>5. Write a program that asks for a digit (0-9), and depending on the input, <b>shows the digit as a word</b> in a Bulgarian or English. Use a <code>switch</code> statement.<br /><br />
<span class="tab"></span>Guidelines: Just use a <code>switch</code> statement to check for all possible digits.<br /><br />
<span class="tab"></span>Solution <br />
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {&nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;first&nbsp;number:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;number&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());<br />
    <br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">switch</span>&nbsp;(number)<br />
    &nbsp;&nbsp;&nbsp;&nbsp;{<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">case</span>&nbsp;0:&nbsp;Console.WriteLine(<span class="String">"Nula"</span>);&nbsp;<span class="Statement">break</span>;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">case</span>&nbsp;1:&nbsp;Console.WriteLine(<span class="String">"Edno"</span>);&nbsp;<span class="Statement">break</span>;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">case</span>&nbsp;2:&nbsp;Console.WriteLine(<span class="String">"Dve"</span>);&nbsp;<span class="Statement">break</span>;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">case</span>&nbsp;3:&nbsp;Console.WriteLine(<span class="String">"Tri"</span>);&nbsp;<span class="Statement">break</span>;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">case</span>&nbsp;4:&nbsp;Console.WriteLine(<span class="String">"Chetiri"</span>);&nbsp;<span class="Statement">break</span>;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">case</span>&nbsp;5:&nbsp;Console.WriteLine(<span class="String">"Pet"</span>);&nbsp;<span class="Statement">break</span>;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">case</span>&nbsp;6:&nbsp;Console.WriteLine(<span class="String">"Shest"</span>);&nbsp;<span class="Statement">break</span>;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">case</span>&nbsp;7:&nbsp;Console.WriteLine(<span class="String">"Sedem"</span>);&nbsp;<span class="Statement">break</span>;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">case</span>&nbsp;8:&nbsp;Console.WriteLine(<span class="String">"Osem"</span>);&nbsp;<span class="Statement">break</span>;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">case</span>&nbsp;9:&nbsp;Console.WriteLine(<span class="String">"Devet"</span>);&nbsp;<span class="Statement">break</span>;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="Modifier">default</span>:&nbsp;Console.WriteLine(<span class="String">"Wrong&nbsp;input"</span>);&nbsp;<span class="Statement">break</span>;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;}<br />
    }
</div>
<hr>
<span class="tab"></span>6. Write a program that gets the coefficients <code>a, b</code> and <code>c</code> of a quadratic equation: <code>ax2 + bx + c</code>, calculates and prints its real roots (if they exist). Quadratic equations may have 0, 1 or 2 real roots.<br /><br />
<span class="tab"></span>Guidelines: Look for the formulas for solving a quadratic equation.<br /><br />
<span class="tab"></span>Solution <br />
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%205%20Solution%206/Program.cs" target="_blank"><b><u>Link</u></b></a><hr>
<span class="tab"></span>7. Write a program that finds the <b>greatest of given 5 numbers</b>.<br /><br />
<span class="tab"></span>Guidelines:  Use nested <code>if</code> statements. You could use the loop structure <code>for</code>, which you could read about on the Internet.<br /><br />
<span class="tab"></span>Solution <br />
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {&nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;first&nbsp;number:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;a&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;second&nbsp;number:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;b&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;third&nbsp;number:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;c&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;fourth&nbsp;number:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;d&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;fifth&nbsp;number:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;e&nbsp;=&nbsp;Int32.Parse(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">if</span>&nbsp;(a&nbsp;&lt;&nbsp;b)&nbsp;a&nbsp;=&nbsp;b;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">if</span>&nbsp;(a&nbsp;&lt;&nbsp;c)&nbsp;a&nbsp;=&nbsp;c;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">if</span>&nbsp;(a&nbsp;&lt;&nbsp;d)&nbsp;a&nbsp;=&nbsp;d;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">if</span>&nbsp;(a&nbsp;&lt;&nbsp;e)&nbsp;a&nbsp;=&nbsp;e;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="String">"{0}&nbsp;is&nbsp;the&nbsp;biggest&nbsp;number."</span>,&nbsp;a);<br />
    }
</div>
<hr>
<span class="tab"></span>8. Write a program that, depending on the user’s choice, inputs <code>int, double</code> or <code>string</code> variable. If the variable is <code>int</code> or <code>double</code>, the program increases it by 1. If the variable is a <code>string</code>, the program appends \"*\" at the end. Print the result at the console. Use <code>switch</code> statement.<br /><br />
<span class="tab"></span>Guidelines: First input a variable, which indicates what type will be the input, i.e. by entering 0 the type is <code>int</code>, by 1 is <code>double</code> and by 2 is <code>string</code>.<br /><br />
<span class="tab"></span>Solution <br />
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%205%20Solution%208/Program.cs" target="_blank"><b><u>Link</u></b></a><hr>
<span class="tab"></span>9. We are given 5 integer numbers. Write a program that finds those <b>subsets whose sum is 0</b>. Examples:<br />
<span class="tab"></span>- If we are given the numbers {3, -2, 1, 1, 8}, the sum of -2, 1 and 1 is 0.<br />
<span class="tab"></span>>- If we are given the numbers {3, 1, -7, 35, 22}, there are no subsets with sum 0.<br /><br />
<span class="tab"></span>Guidelines: Use nested <code>if</code> statements or series of <b>31 comparisons</b>, in order to check all the sums of the 31 subsets of the given numbers (without the empty one). Note that the problem in general (with <code>N</code> numbers) is complex and using loops will not be enough to solve it.<br /><br />
<span class="tab"></span>Solution <br />
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%205%20Solution%209/Program.cs" target="_blank"><b><u>Link</u></b></a><hr>
<span class="tab"></span>10. Write a program that applies <b>bonus points</b> to given scores in the range [1…9] by the following rules:<br />
<span class="tab"></span>- If the score is between 1 and 3, the program multiplies it by 10.<br />
<span class="tab"></span>- If the score is between 7 and 9, the program multiplies it by 1000.<br />
<span class="tab"></span>- If the score is 0 or more than 9, the program prints an error message.<br />
<span class="tab"></span>Guidelines: Use <code>switch</code> statement or a sequence of <code>if-else</code> constructs and at the end print at the console the calculated points.<br /><br />
<span class="tab"></span>Solution <br />
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/tree/master/Chapter%205%20Solution%2010" target="_blank"><b><u>Link</u></b></a><hr>
<span class="tab"></span>Write a program that <b>converts a number in the range [0…999] to words</b>, corresponding to the English pronunciation. Examples:<br />
<span class="tab"></span>-  0 → "Zero"<br />
<span class="tab"></span>-  12 → "Twelve"<br />
<span class="tab"></span>-  98 → "Ninety eight"<br />
<span class="tab"></span>-  273 → "Two hundered seventy three"<br />
<span class="tab"></span>-  400 → "Four hundred"<br />
<span class="tab"></span>-  501 → "Five hundred and one"<br />
<span class="tab"></span>-  711 → "Seven hundered and eleven"<br /><br />
<span class="tab"></span>Guidelines: Use nested <code>switch</code> statements. Pay special attention to the numbers from 0 to 19 and those that end with 0. There because printing a single digit is part of printing a 2-digit number which is part of printing 3-digit number.<br /><br />
<span class="tab"></span>Solution <br />
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%205%20Solution%2011/Program.cs" target="_blank"><b><u>Link</u></b></a><br /><hr>
<span class="tab"></span><a href="javascript:history.back()">&#8592; Back</a>