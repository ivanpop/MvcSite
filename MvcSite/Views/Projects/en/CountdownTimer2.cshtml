@{
    ViewBag.Title = "Countdown timer & Stopwatch";
    Layout = "~/Views/Shared/_LayoutEN.cshtml";
}

<h1>Countdown timer & Stopwatch</h1>
<h2>Stopwatch</h2>
<p><span class="tab"></span>The stopwatch is in its own tab called Stopwatch. It’s completely independent from the countdown timer and the two can work together independently. The stopwatch has the options to count time with a millisecond of precision, to count laps, to pause and to save the lap times in a text file. </p>
<p><span class="tab"></span>The main method in here is called startMS() which is asynchronous. </p>
<div class="code">
    <span class="Modifier">public</span>&nbsp;<span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;startMs()<br />
    {<br />
    &nbsp;&nbsp;&nbsp;&nbsp;tempSeconds1&nbsp;=&nbsp;(<span class="ValueType">byte</span>)DateTime.Now.Second;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">if</span>&nbsp;(lapCount&nbsp;==&nbsp;0)<br />
    &nbsp;&nbsp;&nbsp;&nbsp;{<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lapSeconds&nbsp;=&nbsp;seconds;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lapMinutes&nbsp;=&nbsp;minutes;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lapHours&nbsp;=&nbsp;hours;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;}<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">if</span>&nbsp;(tempSeconds1&nbsp;==&nbsp;tempSeconds2)<br />
    &nbsp;&nbsp;&nbsp;&nbsp;{<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;seconds++;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lapSeconds++;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tempSeconds2&nbsp;=&nbsp;(<span class="ValueType">byte</span>)(tempSeconds1&nbsp;+&nbsp;1);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;}<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">if</span>&nbsp;(tempSeconds1&nbsp;==&nbsp;0&nbsp;&amp;&amp;&nbsp;!sixty)<br />
    &nbsp;&nbsp;&nbsp;&nbsp;{<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;seconds++;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tempSeconds2&nbsp;=&nbsp;1;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sixty&nbsp;=&nbsp;<span class="Keyword">true</span>;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;}<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">if</span>&nbsp;(seconds&nbsp;==&nbsp;10)&nbsp;sixty&nbsp;=&nbsp;<span class="Keyword">false</span>;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">if</span>&nbsp;(seconds&nbsp;&gt;&nbsp;59)<br />
    &nbsp;&nbsp;&nbsp;&nbsp;{<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;seconds&nbsp;=&nbsp;0;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;minutes++;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lapMinutes++;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;}<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">if</span>&nbsp;(minutes&nbsp;&gt;&nbsp;59)<br />
    &nbsp;&nbsp;&nbsp;&nbsp;{<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;minutes&nbsp;=&nbsp;0;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hours++;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lapHours++;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;}<br />
    }
</div>
<p><span class="tab"></span>It starts after the Start button has been pressed and it’s executed once in every 33 milliseconds, which means that the refresh interval of the time is also 33ms.</p>
<h3>Realization</h3>
<p>
    <span class="tab"></span>For the stopwatch I’ve used the system time. It’s used to replace a high-precision timer, which would take lots of system resources. First, seconds from the system time are saved into the variable tempSeconds1. tempSeconds1 and tempSeconds2 are used to indicate the interval of a second. tempSeconds2 is declared as tempSeconds1 + 1 second. When 1 passes tempSeconds1 becomes equal to tempSeconds2 and this indicates the passing of a second. When this happens tempSeconds2 gets increased by 1 and the process begins again. To avoid the situation when tempSeconds1 is 59 and tempSeconds2 to become 60, I’ve used a boolean called “sixty”. In this way when tempSeconds2 becomes 60, it immediately changes to 0 and the minutes get increased by 1. <br />
    <span class="tab"></span>Seconds, minutes and hours are changed in a similar way as the countdown timer. Milliseconds however are not connected with this process. They are taken from the system time to avoid using a high-precision timer. Values are also checked for their correct representation. When the milliseconds are composed of one digit “00” is added in front of it so that a three-digit number is shown on the screen. When the milliseconds are composed of a two-digit number only “0” is added. In the same way seconds, minutes and hours are also checked. This method is executed when the boolean stopwatchRunning is true. <br />
    <span class="tab"></span>The “Lap” button is used for counting laps. It uses a listBox container to show the laps. Data that is saved is composed of: lap number, total time from the beginning, with precision of milliseconds and the time of the lap itself. <br />
    <span class="tab"></span>The “Pause” button is used for pausing. It’s function is to change the boolean stopwatchRunning to false in order to stop the time or to true to resume paused time.<br />
    <span class="tab"></span>”Save” is used for saving time results in a text file. Saving is possible only when the stopwatch has stopped and there is at least one lap in the list box. 
</p>
<br /><span class="tab"></span><b>Source: <a href="https://github.com/ivanpop/stopwatch">Github</a></b>
<span class="tab"></span><b>Download: <a href="~/Resources/countdown timer.exe" target="_blank">Link</a></b><br /><br />
<div class="text-center">
    <div class="pages">
        @Html.ActionLink(HttpUtility.HtmlDecode("&#8656;"), "CountdownTimer", new { id = "" })
        @Html.ActionLink("1", "CountdownTimer", new { id = "" })
        <div class="selected-page">
            <a href="#top">2</a>
        </div>
        @Html.ActionLink(HttpUtility.HtmlDecode("&#8658;"), "CountdownTimer", new { id = "" })
    </div>
</div>
<br />
<span class="tab"></span><a href="javascript:history.back()">&#8592; Обратно</a>