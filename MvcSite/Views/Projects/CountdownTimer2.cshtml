@{
    ViewBag.Title = "Countdown timer & Stopwatch";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Countdown timer & Stopwatch</h1>
<h2>Секундомер</h2><br />
<p><span class="tab"></span>Секундомера се намира в таба Stopwatch. Той е напълно независим от обратното броене и двете могат да работят успоредно едновременно. Секундомера разполага с опциите да засичаме време с точност до милисекунда, да засичаме отделни обиколки, да спрем отчитането за момент чрез пауза и да запишем времената на обиколките в текстов файл.</p>
<p><span class="tab"></span>Основният метод тук се нарича startMS() който е асинхронен.</p>
<img src="~/Resources/CT6.png" /><br /><br />
<p><span class="tab"></span>Той се задейства след натискането на Start бутона и се изпълнява веднъж на всеки 33 милисекунди, което означава и че опресняването на времето на екрана ще се осъществява за същия интервал.</p>
<h3>Реализация</h3><br />
<p><span class="tab"></span>За реализирането на програмата е нужно да се използва системното време. То се използва на мястото на високо-прецизен таймер, който би изисквал доста хардуерни ресурси. Първо, секундите от системното време се взимат и се записват в променливата tempSeconds1. tempSeconds1 и tempSeconds2 се използват за да отчитат интервала от една секунда. tempSeconds2 се декларира като tempSeconds1 + 1 секунда. Когато измине 1 секунда tempSeconds1 се изравнява с tempSeconds2 и това индикира преминаването на една секнуда. Когато това се случи tempSeconds2 се увеличава с 1 и процеса започва отначало. За да се избегне положението когато tempSeconds1 е 59 tempSeconds2 да стане 60, се използва булевата “sixty”. По тови начин когато tempSeconds2 е 60, променливата веднага се променя на 0 и минутите се увеличават с 1.
    <br /><span class="tab"></span>Секундите, минутите и часовете се променят по сходен начин както при обратното броене. Милисекундите обаче не са свързани с този процес. Те се взимат от системното време, като така се спестява нуждата от прецизен таймер. Следи се и за правилното изписване на числата. Когато милисекундите са съставени от една цифра, се добавят “00” пред нея за да се изобрази трицифрено число. Когато милисекундите са двуцифрено число, тогава се добавя само “0”. По същият начин се проверяват секундите, минутите и часовете. Целият метод се изпълнява когато stopwatchRunning булевата е true.
    <br /><span class="tab"></span>За засичането на обиколки се използва бутона “Lap”. Той използва listBox контейнер, за изобразяването на обиколките. Данните които се съхраняват са: номер на обиколката, общото време от започването на секундомера, с точност до милисекунди и времето на самата обиколка, с точност до секунда.
    <br /><span class="tab"></span>За пауза се използва бутона Pause. Неговата функция е да променя булевата stopwatchRunning към false, за да спре времето или към true, за да възобнови спряното време.
    <br /><span class="tab"></span>Save се използва за записването на времето в текстов файл. Запазването е възможно само когато секундомера е приключил и има поне една отчетена обиколка. </p>
    <br /><span class="tab"></span><b>Source: </b> <a href="https://github.com/ivanpop/Converter">Github</a>
    <span class="tab"></span><b>Download: </b> <a href="~/Resources/converter.exe" target="_blank">Link</a><br /><br />
    <div class="text-center">
        <div class="pages">
            <a href="CountdownTimer?page=1">&#8656;</a>
            <a href="CountdownTimer?page=1">1</a>
            <div class="selected-page">
                <a href="#top">2</a>
            </div>
            <a href="CountdownTimer?page=3">3</a>
            <a href="CountdownTimer?page=4">4</a>
            <a href="CountdownTimer?page=3">&#8658;</a>
        </div>
    </div>
    <br />
    <span class="tab"></span><a href="javascript:history.back()">&#8592; Обратно</a>
