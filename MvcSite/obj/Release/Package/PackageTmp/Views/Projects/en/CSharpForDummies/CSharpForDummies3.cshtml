@{
    ViewBag.Title = "C# For Dummies";
    Layout = "~/Views/Shared/_LayoutEN.cshtml";
}

@section ExtraHeadContent {
    <meta name="description" content="C# for Dummies are the poblems from The C# Book of The Telerik Academy, their guidelines and the solutions, which I wrote or tried to :)">
    <meta name="author" content="Ivan Popov">
    <meta name="thumbnail" content="http://localhost:49690/Resources/ivanpopov.jpg" />
    <link rel="image_src" href="http://localhost:49690/Resources/ivanpopov.jpg" />
}

<h1>C# For Dummies</h1>
<h2>Chapter 3. Operators and Expressions</h2>
<span class="tab"></span>1. Write an expression that checks whether an integer is <b>odd or even</b>.<br /><br />
<span class="tab"></span>Guidelines: Take the <b>remainder of dividing the number by 2</b> and check if it is 0 or 1 (respectively the number is odd or even). <b>Use % operator</b> to calculate the remainder of integer division.<br /><br />
<span class="tab"></span>Solution: <br />
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;number&nbsp;=&nbsp;23;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">bool</span>&nbsp;even&nbsp;=&nbsp;number&nbsp;%&nbsp;2&nbsp;==&nbsp;0&nbsp;?&nbsp;<span class="Keyword">true</span>&nbsp;:&nbsp;<span class="Keyword">false</span>;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="String">"{0}&nbsp;is&nbsp;even?&nbsp;{1}"</span>,&nbsp;number,&nbsp;even);<br />
    }
</div>
<hr>
<span class="tab"></span>2. Write a Boolean expression that checks whether a given integer is <b>divisible by both 5 and 7</b>, without a remainder.<br /><br />
<span class="tab"></span>Guidelines: Use a logical \"AND\" (&& operator) and the remainder operation % in division. You can also solve the problem by only one test: the division of 35 (think why).<br /><br />
<span class="tab"></span>Solution: <br />
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;number&nbsp;=&nbsp;36;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">bool</span>&nbsp;divisible&nbsp;=&nbsp;number&nbsp;%&nbsp;35&nbsp;==&nbsp;0&nbsp;?&nbsp;<span class="Keyword">true</span>&nbsp;:&nbsp;<span class="Keyword">false</span>;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="String">"{0}&nbsp;is&nbsp;divisible&nbsp;by&nbsp;both&nbsp;5&nbsp;and&nbsp;7?&nbsp;{1}"</span>,&nbsp;number,&nbsp;even);<br />
    }
</div>
<hr>
<span class="tab"></span>3. Write an expression that checks for a given integer if its <b>third digit</b> (right to left) is 7.<br /><br />
<span class="tab"></span>Guidelines: Divide the number by 100 and save it in a new variable, which then divide by 10 and take the remainder. The remainder of the division by 10 is the third digit of the original number. Check if it is equal to 7.<br /><br />
<span class="tab"></span>Solution: <br />
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;number&nbsp;=&nbsp;45764;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">bool</span>&nbsp;isSeven&nbsp;=&nbsp;(number&nbsp;/&nbsp;100)&nbsp;%&nbsp;10&nbsp;==&nbsp;7&nbsp;?&nbsp;<span class="Keyword">true</span>&nbsp;:&nbsp;<span class="Keyword">false</span>;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="String">"Third&nbsp;digit&nbsp;of&nbsp;{0}&nbsp;is&nbsp;7"</span>,&nbsp;number,&nbsp;even);<br />
    }
</div>
<hr>
<span class="tab"></span>4. Write an expression that checks whether the <b>third bit</b> in a given integer is 1 or 0.<br /><br />
<span class="tab"></span>Guidelines: Use <b>bitwise \"AND\"</b> on the current number and the number that has 1 only in the third bit (i.e. number 8, if bits start counting from 0).<br /><br />
<span class="tab"></span>Solution: <br />
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;number&nbsp;=&nbsp;452;&nbsp;&nbsp;&nbsp;&nbsp;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="String">"The&nbsp;third&nbsp;bit&nbsp;of&nbsp;{0}&nbsp;is&nbsp;1?&nbsp;{1}"</span>,&nbsp;number,&nbsp;((number&nbsp;&gt;&gt;&nbsp;3)&nbsp;&amp;&nbsp;1)&nbsp;==&nbsp;1);<br />
    }
</div>
<hr>
<span class="tab"></span>5. Write an expression that calculates the <b>area of a trapezoid</b> by given sides <b>a</b>, <b>b</b> and height <b>h</b>.<br /><br />
<span class="tab"></span>Guidelines: The formula for <b>trapezoid surface</b> is: S = (a + b) * h / 2.<br /><br />
<span class="tab"></span>Solution: <br />
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">float</span>&nbsp;a&nbsp;=&nbsp;2;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">float</span>&nbsp;b&nbsp;=&nbsp;3;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">float</span>&nbsp;h&nbsp;=&nbsp;1;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="String">"S={0}"</span>,&nbsp;(a&nbsp;+&nbsp;b)&nbsp;/&nbsp;(2&nbsp;*&nbsp;h));<br />
    }
</div>
<hr>
<span class="tab"></span>6. Write a program that prints on the console the <b>perimeter and the area of a rectangle</b> by given side and height entered by the user.<br /><br />
<span class="tab"></span>Guidelines: Search the Internet for <b>how to read integers</b> from the console and use the formula for rectangle area calculation. If you have difficulties see instructions on the next problem.<br /><br />
<span class="tab"></span>Solution: <br />
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;a:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;a&nbsp;=&nbsp;Convert.ToInt32(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;b:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;b&nbsp;=&nbsp;Convert.ToInt32(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="String">"S={0},&nbsp;P={1}"</span>,&nbsp;a&nbsp;*&nbsp;b,&nbsp;(a&nbsp;+&nbsp;b)&nbsp;*&nbsp;2);<br />
    }
</div>
<hr>
<span class="tab"></span>7. The gravitational field of the Moon is approximately 17% of that on the Earth. Write a program that calculates the <b>weight of a man on the moon</b> by a given weight on the Earth.<br /><br />
<span class="tab"></span>Guidelines: <b>Read the number from the console</b>, <b>multiply it by 0.17</b> and print it.<br /><br />
<span class="tab"></span>Solution: <br />
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="String">"Enter&nbsp;weight&nbsp;of&nbsp;a&nbsp;man:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;weight&nbsp;=&nbsp;Convert.ToInt32(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="String">"This&nbsp;person&nbsp;will&nbsp;weight&nbsp;{0}kg&nbsp;on&nbsp;the&nbsp;Moon."</span>,&nbsp;weight&nbsp;*&nbsp;0.17);<br />
    }
</div>
<hr>
<span class="tab"></span>Write an expression that checks for a given point {x, y} if it is <b>within the circle</b> K[{0, 0}, R=5]. Explanation: the point {0, 0} is the center of the circle and 5 is the radius.<br /><br />
<span class="tab"></span>Guidelines: Use the <b>Pythagorean Theorem</b> a2 + b2 = c2. The point is inside the circle when (x*x) + (y*y) ≤ 5*5.<br /><br />
<span class="tab"></span>Solution: <br />
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;x:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;x&nbsp;=&nbsp;Convert.ToInt32(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.Write(<span class="String">"Enter&nbsp;y:&nbsp;"</span>);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;y&nbsp;=&nbsp;Convert.ToInt32(Console.ReadLine());<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">bool</span>&nbsp;isInside&nbsp;=&nbsp;(x&nbsp;*&nbsp;*&nbsp;+&nbsp;y&nbsp;*&nbsp;y&nbsp;&lt;=&nbsp;5)&nbsp;?&nbsp;<span class="Keyword">true</span>&nbsp;:&nbsp;<span class="Keyword">false</span>;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="String">"The&nbsp;point&nbsp;O({0},{1})&nbsp;is&nbsp;inside&nbsp;K((0,0),5)?:&nbsp;{2}"</span>,&nbsp;x,&nbsp;y,&nbsp;isInside);<br />
    }
</div>
<hr>
<span class="tab"></span>9. Write an expression that checks for given point {x, y} if it is <b>within the circle</b> K[{0, 0}, R=5] and <b>out of the rectangle</b> [{-1, 1}, {5, 5}]. Clarification: for the rectangle the lower left and the upper right corners are given.<br /><br />
<span class="tab"></span>Guidelines: Use the code from the previous task and <b>add a check for the rectangle</b>. A point is inside a rectangle with walls parallel to the axes, when in the same time it is right of the left wall, left of the right wall, down from the top wall and above the bottom wall.<br /><br />
<span class="tab"></span>Solution: <a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%203%20Solution%209/Program.cs" target="_blank"><b><u>Link</u></b></a><hr>
<span class="tab"></span>10. Write a program that takes as input a <b>four-digit number</b> in format abcd (e.g. 2011) and performs the following actions:<br />
<span class="tab"></span>-Calculates the sum of the digits (in our example 2+0+1+1 = 4).<br />
<span class="tab"></span>-Prints on the console the number in reversed order: dcba (in our example 1102).<br />
<span class="tab"></span>-Puts the last digit in the first position: dabc (in our example 1201).<br />
<span class="tab"></span>-Exchanges the second and the third digits: acbd (in our example 2101).<br /><br />
<span class="tab"></span>Guidelines: To get the individual digits of the number you can divide by 10 and take the remainder of the division by 10 four times.<br /><br />
<span class="tab"></span>Solution: <a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%203%20Solution%2010/Program.cs" target="_blank"><b><u>Link</u></b></a><hr>
<span class="tab"></span>11. We are given number n and position p. Write a sequence of operations that prints the value of <b>the bit on the position</b> p in the number (0 or 1). Example: n=35, p=5 -> 1. Another example: n=35, p=6 -> 0.<br /><br />
<span class="tab"></span>Guidelines: Use <b>bitwise operations</b><br /><br />
<span class="tab"></span>Solution: <a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%203%20Solution%2011/Program.cs" target="_blank"><b><u>Link</u></b></a><hr>
<span class="tab"></span>12. Write a Boolean expression that checks if the bit on position p in the integer v has the value 1. Example v=5, p=1 -> false.<br /><br />
<span class="tab"></span>Guidelines: The task is similar to the previous one.<br /><br />
<span class="tab"></span>Solution: <br />
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;v&nbsp;=&nbsp;350;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;p&nbsp;=&nbsp;350;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;mask&nbsp;=&nbsp;1&nbsp;&lt;&lt;&nbsp;p;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">bool</span>&nbsp;isOne&nbsp;=&nbsp;(v&nbsp;&amp;&nbsp;mask)&nbsp;!=&nbsp;0&nbsp;?&nbsp;<span class="Keyword">true</span>&nbsp;:&nbsp;<span class="Keyword">false</span>;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="String">"The&nbsp;bit&nbsp;at&nbsp;position&nbsp;{0}of&nbsp;number&nbsp;{1}&nbsp;is&nbsp;1?&nbsp;{2}"</span>,&nbsp;p,&nbsp;v,&nbsp;isOne);<br />
    }
</div>
<hr>
<span class="tab"></span>13. We are given the number n, the value v (v = 0 or 1) and the position p. write a sequence of operations that changes the value of <b>n</b>, so the bit on the position <b>p</b> has the value of <b>v</b>. Example: n=35, p=5, v=0 -> n=3. Another example: n=35, p=2, v=1 -> n=39.<br /><br />
<span class="tab"></span>Guidelines: Use bitwise operations by analogy with the previous two problems.<br /><br />
<span class="tab"></span>Solution: <br />
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;n&nbsp;=&nbsp;350;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;v&nbsp;=&nbsp;0;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;p&nbsp;=&nbsp;3;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;n&nbsp;=&nbsp;(v&nbsp;==&nbsp;0)&nbsp;?&nbsp;n&nbsp;=&nbsp;n&nbsp;&amp;&nbsp;(~(1&nbsp;&lt;&lt;&nbsp;p))&nbsp;:&nbsp;n&nbsp;=&nbsp;n&nbsp;|&nbsp;(1&nbsp;&lt;&lt;&nbsp;p);<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(n);<br />
    }
</div>
<hr>
<span class="tab"></span>14. Write a program that checks if a given number n (1 < n < 100) is a <b>prime number</b> (i.e. it is divisible without remainder only to itself and 1). <br /><br />
<span class="tab"></span> Guidelines: Read about <b>loops</b> in the Internet. Use a loop and check the number for divisibility by all integers from 1 to the square root of the number. Since <b>n < 100</b>, you can find in advance all prime numbers from 1 to 100 and checks the input over them. The <b>prime numbers</b> in the range [1…100] are: 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89 and 97.<br /><br />
<span class="tab"></span>Solution: <br />
<div class="code">
    <span class="Modifier">static</span>&nbsp;<span class="ValueType">void</span>&nbsp;Main(<span class="ReferenceType">string</span>[]&nbsp;args)<br />
    {<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">int</span>&nbsp;number&nbsp;=&nbsp;72;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="ValueType">bool</span>&nbsp;isPrime&nbsp;=&nbsp;<span class="Keyword">true</span>;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">if</span>&nbsp;(number&nbsp;&gt;&nbsp;2)<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">for</span>&nbsp;(<span class="ValueType">int</span>&nbsp;i&nbsp;=&nbsp;2;&nbsp;i&nbsp;&lt;=&nbsp;Math.Ceiling(Math.Sqrt(numbber));&nbsp;++i)<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="Statement">if</span>&nbsp;(number&nbsp;%&nbsp;i&nbsp;==&nbsp;0)&nbsp;isPrime&nbsp;=&nbsp;<span class="Keyword">false</span>;<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />
    &nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="String">"{0}&nbsp;is&nbsp;prime?:&nbsp;{1}"</span>,&nbsp;number,&nbsp;isPrime);<br />
    }
</div>
<hr>
<span class="tab"></span>15. Write a program that <b>exchanges the values of the bits</b> on positions 3, 4 and 5 with bits on positions 24, 25 and 26 of a given 32-bit unsigned integer.<br /><br />
<span class="tab"></span>Guidelines: Use 3 times a combination of getting and setting a bit at a given position.<br /><br />
<span class="tab"></span>Solution: <br />
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%203%20Solution%2015/Program.cs" target="_blank"><b><u>Link</u></b></a><hr>
<span class="tab"></span>16. Write a program that <b>exchanges bits</b> {p, p+1, …, p+k-1} with bits {q, q+1, …, q+k-1} of a given 32-bit unsigned integer.<br /><br />
<span class="tab"></span>Guidelines: Extend the solution of the previous problem to perform a <b>sequence of bit exchanges in a loop</b>.<br /><br />
<span class="tab"></span>Solution: <br />
<span class="tab"></span><a href="https://github.com/ivanpop/CS-for-Dummies/blob/master/Chapter%203%20Solution%2016/Program.cs" target="_blank"><b><u>Link</u></b></a><br /><br /><hr>
<span class="tab"></span><a href="javascript:history.back()">&#8592; Back</a>